!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ALL_BINARY	comm/example/Makefile	/^ALL_BINARY = test_cm_cfg test_cm_log test_cm_shm test_cm_debug \\$/;"	m
ARGS	Makefile	/^ARGS = -g -Wall -fno-strict-aliasing$/;"	m
ARGS	comm/example/Makefile	/^ARGS = -g -Wall -fno-strict-aliasing #-Qunused-arguments$/;"	m
ARGS	comm/src/Makefile	/^ARGS = -g -Wall -fno-strict-aliasing$/;"	m
AddBuffer	comm/src/cm_binary.c	/^int AddBuffer(char **p, int *piLen, const char *pBuf, CM_INT32 iBufLen)$/;"	f
AddBufferNoLen	comm/src/cm_binary.c	/^int AddBufferNoLen(char **p, int *piLen, const char *pBuf, CM_INT32 iBufLen)$/;"	f
AddChar	comm/src/cm_binary.c	/^int AddChar(char **p, int *piLen, char cValue)$/;"	f
AddDWord	comm/src/cm_binary.c	/^int AddDWord(char **p, int *piLen, unsigned CM_INT32 lValue)$/;"	f
AddPackageToChannel	channel.c	/^int AddPackageToChannel(Channel_Queue *pstChannel, char *pBody, int iBodyLen,  int iIsRequest, const struct timeval *ptRecvTime)$/;"	f
AddQWord	comm/src/cm_binary.c	/^int AddQWord(char **p, int *piLen, uint64_t qwValue)$/;"	f
AddWord	comm/src/cm_binary.c	/^int AddWord(char **p, int *piLen, unsigned short shValue)$/;"	f
BUF_LEN	comm/example/test_cm_binary.c	7;"	d	file:
CC	Makefile	/^CC = g++$/;"	m
CC	comm/example/Makefile	/^CC = g++$/;"	m
CC	comm/src/Makefile	/^CC = g++$/;"	m
CFG_DOUBLE	comm/src/cm_cfg.h	13;"	d
CFG_INT	comm/src/cm_cfg.h	11;"	d
CFG_LONG	comm/src/cm_cfg.h	12;"	d
CFG_STRING	comm/src/cm_cfg.h	10;"	d
CHANNEL_BUFFER_LENGTH	channel.h	5;"	d
CHANNEL_LIB	Makefile	/^CHANNEL_LIB = .\/cm_channel.a -I.\/$/;"	m
CM_GetShm	comm/src/cm_shm.c	/^char* CM_GetShm(int iKey, int iSize, int iFlag)$/;"	f
CM_GetShm2	comm/src/cm_shm.c	/^int CM_GetShm2(void **pstShm, int iKey, size_t iSize, int iFlag)$/;"	f
CM_INT32	comm/src/cm_type.h	11;"	d
CM_INT32	comm/src/cm_type.h	7;"	d
CM_SemLock	comm/src/cm_lock.c	/^static int CM_SemLock(int iSemKey, int iWaitFlag, int iTimeOut)$/;"	f	file:
CM_SemLockNoWait	comm/src/cm_lock.c	/^int CM_SemLockNoWait(int iSemKey)$/;"	f
CM_SemLockWait	comm/src/cm_lock.c	/^int CM_SemLockWait(int iSemKey, int iTimeOut)$/;"	f
CM_SemUnLock	comm/src/cm_lock.c	/^int CM_SemUnLock(int iSemKey)$/;"	f
COMM_DIR	Makefile	/^COMM_DIR = .\/comm\/src$/;"	m
COMM_DIR	comm/example/Makefile	/^COMM_DIR = ..\/src$/;"	m
COMM_LIB	Makefile	/^COMM_LIB = $(COMM_DIR)\/cm_lib.a -I$(COMM_DIR) $/;"	m
COMM_LIB	comm/example/Makefile	/^COMM_LIB = $(COMM_DIR)\/cm_lib.a -I$(COMM_DIR) $/;"	m
CPPSRC	Makefile	/^CPPSRC=$(shell ls *.cpp)$/;"	m
CPPSRC	comm/example/Makefile	/^CPPSRC=$(shell ls *.cpp)$/;"	m
CPPSRC	comm/src/Makefile	/^CPPSRC=$(shell ls *.cpp)$/;"	m
CSRC	Makefile	/^CSRC=$(shell ls *.c)$/;"	m
CSRC	comm/example/Makefile	/^CSRC=$(shell ls *.c)$/;"	m
CSRC	comm/src/Makefile	/^CSRC=$(shell ls *.c)$/;"	m
ChannelPkgHead	channel.h	/^} ChannelPkgHead;$/;"	t	typeref:struct:__anon1
Channel_Queue	channel.h	/^} Channel_Queue;$/;"	t	typeref:struct:__anon2
CmSemun	comm/src/cm_lock.h	/^union CmSemun$/;"	u
Comm_GetConfig	comm/src/cm_cfg.c	/^int Comm_GetConfig(char * sConfigFileFullPath, ...)$/;"	f
CreateAddr	comm/src/cm_net.c	/^struct sockaddr_in * CreateAddr(const char *sIp, const char *sPort, const char *sSockType)$/;"	f
CreateAddrEx	comm/src/cm_net.c	/^struct sockaddr_in * CreateAddrEx(const char *sIp, int iPort, const char *sSockType)$/;"	f
CreateClientSocket	comm/src/cm_net.c	/^int CreateClientSocket(const char *sSockType, int *piSocket, const char *sServerIp, const char *sPort, int iIsNeedBlock)$/;"	f
CreateClientSocketRaw	comm/src/cm_net.c	/^int CreateClientSocketRaw(int iSockType, int *piSocket, uint32_t dwServerIp, int iPort, int iIsNeedBlock)$/;"	f
CreateSocket	comm/src/cm_net.c	/^int CreateSocket(const char *sSockType, int *pListener, const char *sListenIp, const char *sPort, int iIsNeedBlock)$/;"	f
CreateSocketRaw	comm/src/cm_net.c	/^int CreateSocketRaw(int iSockType, int *pListener, uint32_t dwListenIp, int iPort, int iIsNeedBlock)$/;"	f
CreateTcpClientSocket	comm/src/cm_net.c	/^int CreateTcpClientSocket(int *piSocket, const char *sServerIp, const char *sPort, int iIsNeedBlock)$/;"	f
CreateTcpClientSocketEx	comm/src/cm_net.c	/^int CreateTcpClientSocketEx(int *piSocket, const char *sServerIp, int iPort, int iIsNeedBlock)$/;"	f
CreateTcpSocket	comm/src/cm_net.c	/^int CreateTcpSocket(int *pListener, const char *sListenIp, const char *sPort, int iIsNeedBlock)$/;"	f
CreateTcpSocketEx	comm/src/cm_net.c	/^int CreateTcpSocketEx(int *pListener, const char *sListenIp, int iPort, int iIsNeedBlock)$/;"	f
CreateUdpClientSocket	comm/src/cm_net.c	/^int CreateUdpClientSocket(int *piSocket, const char *sServerIp, const char *sPort, int iIsNeedBlock)$/;"	f
CreateUdpClientSocketEx	comm/src/cm_net.c	/^int CreateUdpClientSocketEx(int *piSocket, const char *sServerIp, int iPort, int iIsNeedBlock)$/;"	f
CreateUdpSocket	comm/src/cm_net.c	/^int CreateUdpSocket(int *pListener, const char *sListenIp, const char *sPort, int iIsNeedBlock)$/;"	f
CreateUdpSocketEx	comm/src/cm_net.c	/^int CreateUdpSocketEx(int *pListener, const char *sListenIp, int iPort, int iIsNeedBlock)$/;"	f
DEBUG	comm/example/Makefile	/^DEBUG=-g$/;"	m
DEBUG	comm/src/Makefile	/^DEBUG= -g$/;"	m
DEFAULT_CONF_FILE	comm/example/test_cm_cfg.c	6;"	d	file:
DaemonInit	comm/src/cm_process.c	/^void DaemonInit()$/;"	f
DateTimeToStr	comm/src/cm_time.c	/^char *DateTimeToStr(const time_t tTime)$/;"	f
DelShm	comm/src/cm_shm.c	/^int DelShm(int iKey)$/;"	f
DumpHex	comm/src/cm_debug.c	/^const char * DumpHex(const void *pMem, int iLen)$/;"	f
DumpPackage	comm/src/cm_debug.c	/^const char * DumpPackage(const void *pPkg, int iPkgLen)$/;"	f
ERR_MSG_LEN	comm/src/cm_shm.c	12;"	d	file:
ETX	channel.c	10;"	d	file:
FILE_SUFFIX_LEN	comm/src/cm_log.c	13;"	d	file:
GenPrimeArray	comm/src/cm_math.c	/^int GenPrimeArray(int iMax, int iNum, int array[])$/;"	f
GetBuffer	comm/src/cm_binary.c	/^int GetBuffer(char **p, int *piLen, char *pBuf, unsigned CM_INT32 *piBufLen)$/;"	f
GetBufferNoLen	comm/src/cm_binary.c	/^int GetBufferNoLen(char **p, int *piLen, char *pBuf, CM_INT32 iBufLen)$/;"	f
GetBufferPtr	comm/src/cm_binary.c	/^int GetBufferPtr(char **p, int *piLen, char **pBufPtr, CM_INT32 *piBufLen)$/;"	f
GetChannelQueueShm	channel.c	/^int GetChannelQueueShm(int iShmKey, Channel_Queue **pstIdx, int iFlag)$/;"	f
GetChar	comm/src/cm_binary.c	/^int GetChar(char **p, int *piLen, char *cValue)$/;"	f
GetDWord	comm/src/cm_binary.c	/^int GetDWord(char **p, int *piLen, unsigned CM_INT32 *plValue)$/;"	f
GetIpByName	comm/src/cm_net.c	/^int GetIpByName(const char *sInterfaceName, uint32_t *pIp)$/;"	f
GetPackageFromChannel	channel.c	/^int GetPackageFromChannel(Channel_Queue *pstChannel, char *pBody, int *piBodyLen, int iIsRequest, unsigned int *piDiffUs)$/;"	f
GetQWord	comm/src/cm_binary.c	/^int GetQWord(char **p, int *piLen, uint64_t *pqwValue)$/;"	f
GetReadOnlyShm	comm/src/cm_shm.c	/^void * GetReadOnlyShm(int iKey)$/;"	f
GetShm	comm/src/cm_shm.c	/^void * GetShm(int iKey, int iSize, int iFlag)$/;"	f
GetShmEx	comm/src/cm_shm.c	/^int GetShmEx(void **pShm, int iKey, int iSize, int iFlag)$/;"	f
GetShmFrocely	comm/src/cm_shm.c	/^int GetShmFrocely(void **pstShm, int iKey, int iSize)$/;"	f
GetShmSize	comm/src/cm_shm.c	/^int GetShmSize(int iKey) $/;"	f
GetWord	comm/src/cm_binary.c	/^int GetWord(char **p, int *piLen, unsigned short *pshValue)$/;"	f
InitLogFile	comm/src/cm_log.c	/^int InitLogFile(LogFile * pstLogFile, const char *sBaseFileName, int iShiftType, int iMaxLogNum, CM_INT32 lMaxSize)$/;"	f
IsInnerIp	comm/src/cm_net.c	/^int IsInnerIp(in_addr_t dwIp)$/;"	f
IsPrime	comm/src/cm_math.c	/^int IsPrime(int iNum)$/;"	f
LOCK_FILE_NAME_LEN	comm/src/cm_shm.c	148;"	d	file:
LOG_FORMAT_TYPE_NOTIME	comm/src/cm_log.h	38;"	d
LOG_FORMAT_TYPE_TIME	comm/src/cm_log.h	39;"	d
LOG_SHIFT_BY_COUNT	comm/src/cm_log.h	36;"	d
LOG_SHIFT_BY_SIZE	comm/src/cm_log.h	35;"	d
Log	comm/src/cm_log.c	/^int Log(LogFile *pstLogFile, int iLogFormat, const char *sFormat, ...)$/;"	f
LogFile	comm/src/cm_log.h	/^} LogFile;$/;"	t	typeref:struct:__anon3
MAXTIME_IN_CHANNEL	channel.h	6;"	d
MAX_BUFFER_LEN	comm/src/cm_binary.c	234;"	d	file:
MAX_CONFIG_LEN	comm/src/cm_cfg.c	7;"	d	file:
MAX_LISTENING_NUM	comm/src/cm_net.c	65;"	d	file:
MAX_LOG_FILE_NAME_LEN	comm/src/cm_log.h	13;"	d
NEED_BLOCK	comm/src/cm_net.h	22;"	d
NO_BLOCK	comm/src/cm_net.h	21;"	d
OBJS	Makefile	/^OBJS=$(CSRC:.c=.o) $/;"	m
OBJS	comm/example/Makefile	/^OBJS=$(CSRC:.c=.o) $/;"	m
OBJS	comm/src/Makefile	/^OBJS=$(CSRC:.c=.o) $/;"	m
PERSION_ARRAY_SIZE	comm/example/test_cm_shm.c	11;"	d	file:
PKG_LEN	comm/src/cm_debug.c	4;"	d	file:
Person	comm/example/test_cm_shm.c	/^struct Person {$/;"	s	file:
SEM_INIT_MAX_TRIES	comm/src/cm_lock.c	9;"	d	file:
SHM_ID	comm/example/test_cm_shm.c	9;"	d	file:
STRING_BUFFER_LEN	comm/src/cm_time.c	7;"	d	file:
STX	channel.c	9;"	d	file:
SetNBLock	comm/src/cm_net.c	/^int SetNBLock(int iSock)$/;"	f
ShiftFiles	comm/src/cm_log.c	/^static int ShiftFiles(LogFile *pstLogFile)$/;"	f	file:
USDIFF	channel.c	11;"	d	file:
WritePid	comm/src/cm_process.c	/^int WritePid(const char *sPidFilePath)$/;"	f
_CM_BINARY_H_	comm/src/cm_binary.h	2;"	d
_CM_CFG_H_	comm/src/cm_cfg.h	2;"	d
_CM_CHANNEL_H	channel.h	2;"	d
_CM_DEBUG_H_	comm/src/cm_debug.h	2;"	d
_CM_LOG_H_	comm/src/cm_log.h	2;"	d
_CM_MATH_H_	comm/src/cm_math.h	2;"	d
_CM_NET_H_	comm/src/cm_net.h	2;"	d
_CM_PROCESS_H_	comm/src/cm_process.h	2;"	d
_CM_SHM_H_	comm/src/cm_shm.h	2;"	d
_CM_TIME_H_	comm/src/cm_time.h	2;"	d
_CM_TYPE_H_	comm/src/cm_type.h	2;"	d
_GetNameAndVal	comm/src/cm_cfg.c	/^static int _GetNameAndVal(char * sLine, char * sName, char * sVal)$/;"	f	file:
_GetShmAndForcely	comm/src/cm_shm.c	/^static int _GetShmAndForcely(void **pstShm, int iKey, int iSize)$/;"	f	file:
_InitDefault	comm/src/cm_cfg.c	/^static void _InitDefault(va_list ap)$/;"	f	file:
_PROCNUM_CONTROL_H_	comm/src/cm_procnum_control.h	2;"	d
_SetVal	comm/src/cm_cfg.c	/^static int _SetVal(va_list ap, char *sCfgName, char *sCfgVal)$/;"	f	file:
__buf	comm/src/cm_lock.h	/^    struct seminfo *__buf;    \/* buffer for IPC_INFO *\/$/;"	m	union:CmSemun	typeref:struct:CmSemun::seminfo
_get_name	comm/src/cm_cfg.c	/^static int _get_name(char * desc, char * src)$/;"	f	file:
array	comm/src/cm_lock.h	/^    unsigned short *array;    \/* array for GETALL, SETALL *\/$/;"	m	union:CmSemun
atoaddr	comm/src/cm_net.c	/^struct in_addr *atoaddr(const char *sAddress)$/;"	f
atoport	comm/src/cm_net.c	/^int atoport(const char *sService, const char *sProto)$/;"	f
buf	comm/src/cm_lock.h	/^    struct semid_ds *buf;     \/* buffer for IPC_STAT, IPC_SET *\/$/;"	m	union:CmSemun	typeref:struct:CmSemun::semid_ds
cFlag	channel.h	/^	char cFlag;$/;"	m	struct:__anon1
caRequestBuffer	channel.h	/^	char caRequestBuffer[CHANNEL_BUFFER_LENGTH];$/;"	m	struct:__anon2
caResponseBuffer	channel.h	/^	char caResponseBuffer[CHANNEL_BUFFER_LENGTH];$/;"	m	struct:__anon2
g_astPersons	comm/example/test_cm_shm.c	/^struct Person g_astPersons[PERSION_ARRAY_SIZE];$/;"	v	typeref:struct:Person
hton64	comm/src/cm_binary.h	/^static inline uint64_t hton64(uint64_t qwVal)$/;"	f
iAge	comm/example/test_cm_shm.c	/^	int iAge;$/;"	m	struct:Person	file:
iMaxLogNum	comm/src/cm_log.h	/^	int iMaxLogNum;$/;"	m	struct:__anon3
iSex	comm/example/test_cm_shm.c	/^	int iSex;$/;"	m	struct:Person	file:
iShiftType	comm/src/cm_log.h	/^	int iShiftType;$/;"	m	struct:__anon3
lLastShiftTime	comm/src/cm_log.h	/^	CM_INT32 lLastShiftTime;$/;"	m	struct:__anon3
lLogLineCount	comm/src/cm_log.h	/^	CM_INT32 lLogLineCount;$/;"	m	struct:__anon3
lMaxCount	comm/src/cm_log.h	/^	CM_INT32 lMaxCount;$/;"	m	struct:__anon3
lMaxFileSize	comm/src/cm_log.h	/^	CM_INT32 lMaxFileSize;$/;"	m	struct:__anon3
lMaxLineCount	comm/src/cm_log.h	/^	CM_INT32 lMaxLineCount;$/;"	m	struct:__anon3
lRequestHeadPos	channel.h	/^	volatile unsigned CM_INT32 lRequestHeadPos;$/;"	m	struct:__anon2
lRequestTailPos	channel.h	/^	volatile unsigned CM_INT32 lRequestTailPos;	$/;"	m	struct:__anon2
lResponseHeadPos	channel.h	/^	volatile unsigned CM_INT32 lResponseHeadPos;$/;"	m	struct:__anon2
lResponseTailPos	channel.h	/^	volatile unsigned CM_INT32 lResponseTailPos;$/;"	m	struct:__anon2
lTotalRequestPkgs	channel.h	/^	volatile unsigned CM_INT32 lTotalRequestPkgs;$/;"	m	struct:__anon2
lTotalResponsePkgs	channel.h	/^	volatile unsigned CM_INT32 lTotalResponsePkgs;$/;"	m	struct:__anon2
main	comm/example/test_cm_binary.c	/^int main()$/;"	f
main	comm/example/test_cm_cfg.c	/^int main(int argc, char * argv[])$/;"	f
main	comm/example/test_cm_debug.c	/^int main()$/;"	f
main	comm/example/test_cm_log.c	/^int main(int argc, char * argv[])$/;"	f
main	comm/example/test_cm_net.c	/^int main()$/;"	f
main	comm/example/test_cm_process.c	/^int main()$/;"	f
main	comm/example/test_cm_shm.c	/^int main(int argc, char * argv[])$/;"	f
main	test.c	/^int main(int argc, char * argv[])$/;"	f
ntoh64	comm/src/cm_binary.h	43;"	d
pLogFile	comm/src/cm_log.h	/^	FILE *pLogFile;$/;"	m	struct:__anon3
procnum_control_get_value	comm/src/cm_procnum_control.c	/^int procnum_control_get_value(key_t semkey, int* pValue)$/;"	f
procnum_control_on_exit	comm/src/cm_procnum_control.c	/^int procnum_control_on_exit(key_t semkey)$/;"	f
procnum_control_on_start	comm/src/cm_procnum_control.c	/^int procnum_control_on_start(key_t semkey, int iProcNum)$/;"	f
sBaseFileName	comm/src/cm_log.h	/^	char sBaseFileName[MAX_LOG_FILE_NAME_LEN];$/;"	m	struct:__anon3
sLogFileName	comm/src/cm_log.h	/^	char sLogFileName[MAX_LOG_FILE_NAME_LEN];$/;"	m	struct:__anon3
shLength	channel.h	/^	unsigned short shLength;$/;"	m	struct:__anon1
tPkgInTime	channel.h	/^	struct timeval tPkgInTime;$/;"	m	struct:__anon1	typeref:struct:__anon1::timeval
val	comm/src/cm_lock.h	/^    int val;                  \/* value for SETVAL *\/$/;"	m	union:CmSemun
